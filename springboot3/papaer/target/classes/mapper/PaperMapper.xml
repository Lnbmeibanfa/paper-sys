<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paper.mapper.PaperMapper">
    <insert id="add" parameterType="com.paper.entity.Paper" useGeneratedKeys="true" keyProperty="id">
        insert into `paper`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="studentId != null">student_id,</if>
            <if test="name != null">name,</if>
            <if test="resource != null">resource,</if>
            <if test="content != null">content,</if>
            <if test="studentGroup != null">student_group,</if>
            <if test="type != null">type,</if>
            <if test="gpa != null">gpa,</if>
            <if test="requirement != null">requirement,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="studentId != null">#{studentId},</if>
            <if test="name != null">#{name},</if>
            <if test="resource != null">#{resource},</if>
            <if test="content != null">#{content},</if>
            <if test="studentGroup != null">#{studentGroup},</if>
            <if test="type != null">#{type},</if>
            <if test="gpa != null">#{gpa},</if>
            <if test="requirement != null">#{requirement},</if>
        </trim>
    </insert>
    <delete id="delete">
        delete
        from `paper`
        where id = #{id};
    </delete>

    <update id="update">
        update `paper`
        <set>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="gpa != null">gpa = #{gpa},</if>
            <if test="name != null">name = #{name},</if>
            <if test="resource != null">resource = #{resource},</if>
            <if test="content != null">content = #{content},</if>
            <if test="studentGroup != null">student_group = #{studentGroup},</if>
            <if test="type != null">type = #{type},</if>
            <if test="requirement != null">requirement = #{requirement},</if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <resultMap id="PaperResultMap" type="com.paper.entity.Paper">
        <id property="id" column="id" />
        <result property="teacherId" column="teacher_id" />
        <result property="studentId" column="student_id" />
        <result property="name" column="name" />
        <result property="resource" column="resource" />
        <result property="content" column="content" />
        <result property="studentGroup" column="student_group" />
        <result property="type" column="type" />
        <result property="gpa" column="gpa" />
        <result property="requirement" column="requirement" />
        <collection property="courses" ofType="com.paper.entity.Course"
                    select="com.paper.mapper.CourseMapper.selectCourseByPaperId"
                    column="id">
        </collection>
        <collection property="languages" ofType="com.paper.entity.Language"
                    select="com.paper.mapper.LanguageMapper.selectLanguageByPaperId"
                    column="id">
        </collection>
        <collection property="technologies" ofType="com.paper.entity.Technology"
                    select="com.paper.mapper.TechnologyMapper.selectTechnologyByPaperId"
                    column="id">
        </collection>
    </resultMap>
    <select id="selectByPage" resultMap="PaperResultMap">
        select * from `paper`
       <where>
            <if test="teacherId != null">and teacher_id = #{teacherId}</if>
            <if test="studentId != null">and student_id = #{studentId}</if>
        </where>
    </select>
    <select id="selectById" resultType="com.paper.entity.Paper">
        select * from `paper` where id = #{id}
    </select>
    <select id="selectByFilter" resultMap="PaperResultMap">
        select distinct p.*, t.name as teacherName, t.address as teacherAddress,
        t.phone as teacherPhone, t.wechat as teacherWechat, t.qq as teacherQQ, t.email as teacherEmail,
        t.research_direction as teacherResearchDirection, t.avatar as teacherAvatar
        from `paper` p
        left join `paper-sys`.paper_course pc on p.id = pc.paper_id
        left join `paper-sys`.paper_language pl on p.id = pl.paper_id
        left join `paper-sys`.paper_technology pt on p.id = pt.paper_id
        left join `paper-sys`.teacher t on p.teacher_id = t.id
        <where>
            <if test="courseIds != null and courseIds.size() > 0">
                and pc.course_id IN
                <foreach collection="courseIds" item="item" open="(" close=")" separator=",">#{item}</foreach>
            </if>
            <if test="languageIds != null and languageIds.size() > 0">
                and pl.language_id IN
                <foreach collection="languageIds" item="item" open="(" close=")" separator=",">#{item}</foreach>
            </if>
            <if test="technologyIds != null and technologyIds.size() > 0">
                and pl.language_id IN
                <foreach collection="technologyIds" item="item" open="(" close=")" separator=",">#{item}</foreach>
            </if>
        </where>
    </select>


</mapper>